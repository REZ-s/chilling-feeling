<도메인 모델>
회원, 상품(주류), 구독(결제), 검색, 히스토리, 즐겨찾기, 맞춤서베이(CustomSurvey), 구독상품(술 종류별로 가격이 다르겠다)

<테이블 설계>
회원 (회원id, pw, 이름, 주소, 전화번호, 구독 리스트)
상품 (상품id, 이름, 가격, 재고, 타입, 구독상품id, 카테고리id) : * 타입은 와인, 양주, 전통주 3가지 중 하나이다.
구독 (구독id, 회원id, 구독상품id, 구독날짜, 구독상태) : * 구독상태는 구독중, 구독취소예정, 구독취소완료 3가지 중 하나이다. 
구독상품 (구독상품id, 구독id, 상품 리스트, 가격) : * 구독하면 매 주 지급되는 상품은 패키지형태로 지급된다. 이 패키지 안의 개별 상품들은 중복될 수 있다.
즐겨찾기 (즐겨찾기id, 회원id, 상품 리스트) : * 검색과 추천은 실시간 로직으로 결정되기때문에 회원별로 해당 정보를 따로 저장하진 않는다.
카테고리 (카테고리id, 이름, 상품 리스트, 상위 카테고리, 하위 카테고리 리스트)

********** 현재 하고 있는 일 **********
1. 구독 상품의 의의 문서 작성 (O)
2. 구독 관련 테이블을 스키마로 따로 분리 (O)
3. 카테고리 테이블 추가 (O)
4. 상품 스키마 추가 (O)
    - 상품은 낱개의 최소 단위 데이터를 뜻하고, 실제로 판매하게 되는 상품은 구독상품이다.
    - 따라서, 상품(N) : 구독상품(1) 매핑한다. 
    - 구독상품을 고객이 구성하도록 해야하나? 아니면 개발사가 주기적으로 구성하도록 해야하나?
      둘 중 어느 경우든 '구독상품' 자체를 구성하고 수정이 용이하도록 해야한다. 
5. 개인정보 주소록 테이블 설계 (O)
    - 배송을 위한 주소를 받을 필요가 있음
    - 한 사람이 여러 개의 주소를 등록할 수 있음
    - 복합 기본 키에 대한 학습중.. 복합 기본키는 수정이 필요없는 간결한 데이터의 경우에만 사용하나?
       찾아본 내용을 정리하면, 굳이 복합으로 구성하지 않고 별도의 id를 만들어 사용하는 편이 낫겠다. (기존 pk 대상은 fk로 사용)
    - 개인 주소록, 검색을 위한 주소DB 구축 방법, 주소도 스키마로 분리해야하나?
    - 사용자와 주소의 경우, 다대다 관계이기때문에 이를 풀어준다.
    - 우선, 한국을 대상으로 Address 테이블 컬럼을 구성해보자.
      또, 주소 검색을 원활히 하기 위해서 Address의 주요 컬럼들을 fk로 구성하여 Addresses 테이블을 참조할 수 있도록
      구글의 경우, 대한민국 -> 도/시 -> 시/군/구 -> 주소 를 선택하고, (경기도 성남시 처럼 시 중에서 규모가 큰 경우, 주소 란에서 구를 고를 수 있게 해놓음)
                      '주소입력란1 / 주소입력란2 / 우편번호' 를 직접 입력하게 되어있음
                      예) 대한민국 경기도 성남시 수정구 '수정로97번길 8-1 / 203호 / 13310'
      네이버의 경우, 도로명주소와 지번주소 중에서 하나 선택 후 '도로명주소+건물번호/건물명' or '지번주소+번지수/건물명' 입력을 하면 
                         검색 결과가 나온 뒤에 그 결과중에서 하나를 선택하면 '상세주소' 를 직접 입력하게 되어있음
                      예) 13310 경기도 성남시 수정구 수정로97번길 8-1 '203호'
      해외는 아직 고려대상이 아니므로, 우선 네이버 방식을 생각해보자. 
      '우편번호 + 검색된 기본주소 + 상세주소' 형태로 이루어져 있으므로 컬럼도 그렇게?
      'postal_code, base_address, detail_address' 
      이렇게 해도 서비스에 문제 없음. 후에 어떤 특정 지역을 대상으로 이벤트를 하거나 빅데이터 활용을 위한 정보 수집에는 용이하지 않으나
      지금 우리한테는 이러한 작업이 필요없다고 판단됨.      
      예) 우리나라 지도를 시나 구 단위로 나뉘어서 해당 블록의 구독배송 이용자 수를 보여주는 지표
      -> 주소록 DB를 구축 : 파일 전체를 insert 한 table을 참고
6. 주문 및 결제 스키마 추가 (O)
    - 구독을 하면 자동으로 구독상품을 선택할 수 있는건데.. 주문이 필요할까? 주문은 필요하되 장바구니는 필요없지
      구독을 할때, 결제가 이루어지므로 이후 결제할 이유가 없다. 만약 구독이후 구독상품을 선택할때도 결제가 이루어진다면? 
      그래도 0원 형태로 주문의 형태가 필요하지 않을까?
    - 주문의 경우, 구독상품 1개만 필요하므로 다대다로 설계하지 않았다.
    - 우선, 최대한 필수적인 요소만 포함하여 간단하게 설계한다.
7. 구독결제 및 구독상품 주문 시나리오 작성 (O)
    - 배송까지 최단 루트 : (회원가입 및 로그인)  -> 구독상품 신청 및 주문 -> 구독상품 결제 -> 정해진 날마다 구독상품 배송
      구독취소 : 구독상품 취소 -> 당일 기준으로 배송 취소 및 구독상품 환불

잠깐.. 근데 구독이란 것과.. 구독상품이라는게 참 같이 엮어야 하지 않나?
구독 따로 결제하고.. 나중에 구독 상품들을 골라서 배송한다는게 맞나?
-> 구독의 유형에 '정기배송형' 이라는 것이 있다. 

참고사이트) 위잇딜라잇, 데일리샷
데일리샷 : 술픽업 서비스. 원하는 주류를 선택하고 신청해서 주변 식당이나 매장에서 픽업
위잇딜라잇 : 도시락 구독상품 서비스. 선택한 기간 동안 매일 도시락 배달
-> 위의 사이트들을 합한 형태로 개발

1. 메뉴 보고 신청 : 원하는 메뉴와 수량으로 신청해요. 메뉴 정보가 제공되는 한 달까지 구독 일정을 설정할 수 있어요.
2. 메뉴 안 보고 신청 : 원하는 요일과 기간만 선택하여 신청해요. 결제 이후에도 구독 수량과 일정은 자유롭게 조정할 수 있어요.

가능한 배송지 : 서울, 경기도 (우선)
구독 신청가능 기간 : 3일 이후 (사용자가 신청하는 날로부터) ~ 30일
선택 가능한 구독상품 리스트 : 
    - 직접선택 : 최대 30일 단위로 미리 선별 해놓는다. 구독상품의 종류는 많은 조합이 될 수 있다. (예: 와인/A타입 + 보드카/B타입 = 총 2개)
    - 자동선택 : 큰 카테고리만 선택하고 기간만 설정하면 알아서 조합한다. 
정리 : 
    - 구독상품 선택시, 기간과 개수에 따라 결제 금액이 결정됨. 
    - 구독취소는 어떻게? 취소를 누르면 당일(00:00) 이후 구독상품을 배송 취소 및 결제 금액을 일괄 환불함
    - 구독상품 결제를 완료 한 뒤, 같은 날에 다시 신청을 하려고 하면 중복에러 발생시키자. (변경하고싶으면 취소하고 다시 신청)

8. ERD 작성 (O)
    - 식별 관계 vs 비식별 관계
      비식별 관계로. why? 수정이 용이하므로
    - 구독 vs 구독상품 테이블을 좀 조정할 필요가 있을듯? 
      구독상품이 n개 있을 수 있겠네. 예) 구독상품A(1월 1 ~ 3일), 구독상품B(1월 4 ~ 5일)
      구독상품에 subscription_id가 fk로 있는게 맞나? 
      이거.. 어쩌면 다른 것도 n:m 다대다 관계만 별도 테이블로 풀어야하는데, 1:n도 별도 테이블로 풀어놓은거 다시해야할듯
      그런 경우 어떻게 하더라? 일단 했음.
      취소 및 환불의 경우에는 전체취소, 전체환불은 배달 시작전 (정확히 말하면 도시락 주문이 들어가기전) 가능해야한다.
      부분환불의 경우 제공하지 말자
      
9. 회원가입 / 로그인 인증 부분 테이블 설계 (O)
    - 테이블은 만들어놨고, 코드 작성하면서 완성시켜야할 듯

10. ERD를 기준으로 코드를 쉽게 작성할 수 있는 방법 (O)
    - erd to sql 완료
    - erd to code ? 직접 엔티티 코드 작성

11. Entity 코드 작성 (작업중)
    - domain 폴더 내부에 작업

12. 버튼으로 간단한 웹 사이트 구축 (작업중)
    - 자동 생성 툴이 있나?


#.
    - 환불 가능 여부는 배치 잡으로 7일이 지나면 주기적으로 돌게
      
    - 알림을 보내기 위한, SNS 메시지 관련 테이블을 만들자. 
      예) 이메일 발송, 문자 발송 / send_email table, send_sms table
      
    - Log table 설계
      회원가입 로그, 로그인 로그, 인증 로그, 프로필 로그, 즐겨찾기 로그, 주문 로그, 결제 로그, 구독상품 선택 로그, 구독상품 신청 로그, ...
      


< DB 스키마 및 테이블 설계 > 
회원 스키마를 만들고, 그 안에 회원 관련 테이블을 생성하자. (일종의 패키지화 / 규모가 아직 작으므로 DataSource 분리는 안함)
(DB마다 스키마나 카탈로그중 그룹화하는게 다르므로 둘 중 하나 사용)
예) CoreDB 의 Member Schema 의 User Table
     코드상으로 @Table(schema = "member", name = "user") 

* 표시된 테이블은 암호화 및 보안 감사 대상
  인증 테이블의 경우, 본인 인증 서비스를 해주는 타업체의 인증을 통해 가입하는 경우만 기록됨

회원 (Member) - 회원가입 및 로그인과 관련된 스키마
    사용자 (User) - user_id, user_name, account_type
    프로필 (Profile) - profile_id, user_id, nickname, image_url, introduction, join_date, update_date
    * 인증 (Authentication) - authentication_id, user_id, gather_agree, phone_number, email, birthday, sex, country, auth_date
    * 주소 (Address) - address_id, postal_code, base_address, detail_address
    사용자주소 (UserAddress) - user_address_id, user_id, address_id, address_type
    장치 (Device) - device_id, user_id, in_use, register_no, uuid, model, os_type, os_version
    구독 (Subscription) - subscription_id, user_id, subscription_plan, purchase_date, expriation_date
    
검색저장소 (SearchRepository) - 검색에 활용되는 데이터 스키마
    주소록 (Addresses) - addresses_id, postal_code, base_address, 우편번호, 시도, 시군구, 읍면, 도로명, 건물번호본번, 건물번호부번
    주소입력 (tmp_InsertAddresses) - 우편번호, 시도, 시도(영문), 시군구, 시군구(영문), 읍면, 읍면(영문), 도로명코드, 도로명, 도로명(영문), 지하여부, 
                                         건물번호본번, 건물번호부번, 건물관리번호, 다량배달처명, 시군구용건물명, 법정동코드, 법정동명, 리명, 행정동명, 
                                         산여부, 지번본번, 읍면동일련번호, 지번부번, 구우편번호, 우편일련번호
    
빌링 (Billing) - 결제 관련 스키마
    주문 (Order) - order_id, user_id, order_status, create_date, update_date
    배송 (Delivery) - delivery_id, order_id, delivery_status, create_date, update_date
    결제 (Payment) - payment_id, order_id, raw_price, discount_price, final_price, payment_type, payment_status, create_date, update_date
    환불 (Refund) - refund_id, refund_status, create_date, update_date
    해지 (Cancel) - cancel_id, cancel_status, create_date, update_date

상품 (Product) - 상품 관련 스키마
    상품 (Goods) - goods_id, category_id, goods_name, price, stock, description
    구독상품 (SubscriptionGoods) - subscription_goods_id, subscription_id, subscription_goods_name, discount_rate, category_id, goods_id_list, description
    카테고리 (Category) - category_id, category_name, parent_id
    즐겨찾기 (Favorite) - favorite_id, user_id, goods_id_list

인증 (Auth) - 인증 관련 스키마
    소셜로그인 (SocialLogin) - social_login_id, user_id, social_code, external_id, access_token, update_date
    패스워드 (Password) - password_id, user_id, salt, password, update_date
    cidi (Cidi) - cidi_id, user_id, ci, di

로그 (Log) - 로그 관련 스키마
    사용자 활동 로그 (UserActivityLog) - user_activity_log_id, user_id, table_name, row_id, activity_code, as_is, to_be, modifier, log_time
    로그인 로그 (UserLoginLog) - user_login_log_id, user_id, status_code, device_id, ip, fail_count, fail_reason, login_date
    휴면 로그 (UserDormancyLog) - user_dormancy_log_id, user_id, status_code, dormancy_date
    탈퇴 로그 (UserWithdrawalLog) - user_withdrawal_log_id, user_id, status_code, ci, reason_code, reason_text, withdrawal_date

휴면 (Dormancy) - 휴면 계정용 스키마
탈퇴 (Withdrawal) - 탈퇴 계정용 스키마
메타데이터 (MetaData) - 각종 테이블 정보용 스키마

< 테이블 정의서 설명 > 
user_id : UUID 형태의 임의 난수. 예) 00000000-0000-0000-0000-000000000000
user_name : 실제 로그인할 때 사용하는 id 문자열
account_type : 99 (관리자 계정) / 1 (일반 사용자 계정) / 2 (내부 테스트용 계정) / 3 (임시 계정)
address_type : 0 (기본값. 현재 선택된 기본 주소) / 1 (집) / 2 (직장) / 3 (기타 장소)
gather_agree : 개인 정보 수집 동의 여부 (0 : 동의하지 않음 / 1 : 동의)
subscription_plan : 구독 결제한 개월 수 (최소 단위 1달)
salt : 패스워드 암호화에 쓰이는 솔트. 해시 함수로 digest를 뽑기전 원래의 비밀번호에 더하는 임의의 문자열을 의미
password : id 방식으로 가입한 경우 실제 비밀번호 이 경우 not null / 소셜 로그인의 경우 null 값 가능
social_login : 소셜 로그인의 경우 저장하는 정보들
                 이때, 소셜 로그인으로 회원가입한 경우에는 내부에 사용하는 user_id 과 user_name 을 자동 생성해주는 프로세스 필요
social_code : 소셜 서비스 단위. 0 (해당없음) / 1 (google) / 2 (apple) / 3 (naver) / 4 (kakao) ... 
cidi : 본인 인증업체, 휴대폰 인증, 아이핀 같은 업체로부터 본인 인증 절차를 거쳤을 시에 받는 고유값
ci : 흔히 암호화된 온라인 주민 번호라고 하며 어떤 업체에서 인증을 받더라도, 한 사람에게 하나의 값만 부여됨
di : 사이트 중복 가입을 방지하는데 사용한다고 하는데, 이건 인증 업체마다 다른 값이 올 수도 있기 때문에 사용하는 주의가 필요


< 구독 상품에 대한 이야기 >
구독은 넷플릭스처럼 접근허용을 가능하게하는 입장권의 구독 형태와 특정 상품을 주기적으로 제공하는 형태가 있다.
우리의 서비스는 특정 제품을 검색하고 구경하는데 어떠한 권한도 필요하지 않으므로, 구독 형태는 후자에 해당한다.

일반적인 판매가 아닌 구독 상품 형태로 서비스를 제공하는가?

일단 시중에서 손쉽게 구할 수 있는 주류의 경우에는 굳이 우리 서비스를 이용할 이유는 없다.
또, 현재 대부분의 주류의 경우 국내외를 포함해서 유통에 아주 빠른 효과를 보긴 어렵다.
더해서 술집이나 편의점을 벗어나서 배송을 원하는 경우 애주가일 가능성이 높으며, 이경우 주기적으로 주류를 접하는 케이스가 많다.
배송의 단위가 1주일 ~ 1달로 잡으면, 이를 단순 낱개로 판매하기보다는 재구매의사가 높은 고객을 타겟으로 삼아서 
받을 때 조금 더 선물 이미지에 가까운 구독 상품 형태로 판매하고자 했다. 
여기에 추천 알고리즘 및 간단한 취향 설문조사를 통해 니즈 파악 후 구독 상품 구성도 덤이다.
정리하면, 개발 내외적으로 추가적으로 해보고 싶은 것들을 잔뜩 붙여서 해볼 수 있어서 선택하게 되었다.

< 주류 배송 관련 법안 >
현재 정부는 주세법상 지역·전통주를 제외하고는 모든 주류에 대해 온라인 또는 통신 판매 등 전자상거래와 배송을 금지하고 있다. 
다만, 일반 주류도 관련 법령 일부 개정 시행을 거치며 현재는 모바일 어플리케이션(앱) 등을 통해 주문한 후
편의점·음식점(술집) 등 오프라인 영업장에서 소비자가 직접 인도하는 방식의 ‘스마트 오더’는 가능하도록 규제를 완화했다.
